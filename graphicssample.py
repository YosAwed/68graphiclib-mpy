import x68k
import machine

from struct import pack

# IOCS LINE
#$b8	_LINE		グラフィック画面のライン
#
#引数	a1.l	パラメータバッファのアドレス
#		 (0,a1)	始点 X 座標
#		 (2,a1)	〃   Y 〃
#		 (4,a1)	終点 X 〃
#		 (6,a1)	〃   Y 〃
#		 (8,a1)	パレットコード
#		(10,a1)	ラインスタイル
#
#返値	d0.l =	0	正常終了
#		-1	グラフィック使用不可
#		-2	指定パレットコードは現在のモードでは使用不可
#
#	グラフィック画面に線を描画する.
#==============================================================================

def line(x1, y1, x2, y2, pal, style):
   x68k.iocs(x68k.i.LINE,a1=pack('6h',x1,y1,x2,y2,pal,style))

# IOCS BOX
#$b9	_BOX		グラフィック画面のボックス
#
#引数	a1.l	パラメータバッファのアドレス
#		 (0,a1)	始点 X 座標
#		 (2,a1)	〃   Y 〃
#		 (4,a1)	終点 X 〃
#		 (6,a1)	〃   Y 〃
#		 (8,a1)	パレットコード
#		(10,a1)	ラインスタイル
#
#返値	d0.l =	0	正常終了
#		-1	グラフィック使用不可
#		-2	指定パレットコードは現在のモードでは使用不可
#
#	グラフィック画面に長方形を描画する.
#==============================================================================

def box(x1, y1, x2, y2, pal, style):
   x68k.iocs(x68k.i.BOX,a1=pack('6h',x1,y1,x2,y2,pal,style))

# IOCS FILL
#$ba	_FILL		グラフィック画面のボックスフィル
#
#引数	a1.l	パラメータバッファのアドレス
#		(0,a1)	始点 X 座標
#		(2,a1)	〃   Y 〃
#		(4,a1)	終点 X 〃
#		(6,a1)	〃   Y 〃
#		(8,a1)	パレットコード
#
#返値	d0.l =	0	正常終了
#		-1	グラフィック使用不可
#		-2	指定パレットコードは現在のモードでは使用不可
#
#	グラフィック画面に塗り潰した長方形を描画する.
#==============================================================================

def fill(x1, y1, x2, y2, pal):
   x68k.iocs(x68k.i.FILL,a1=pack('5h',x1,y1,x2,y2,pal))

# IOCS CIRCLE
#$bb	_CIRCLE		グラフィック画面のサークル
#
#引数	a1.l	パラメータバッファのアドレス
#		 (0,a1)	中心 X 座標
#		 (2,a1)	〃   Y 〃
#		 (4,a1)	半径
#		 (6,a1)	パレットコード
#		 (8,a1)	円弧開始角度(負数で扇形を描画)
#		(10,a1)	〃  終了〃  (	    〃	     )
#		(12,a1)	比率
#
#返値	d0.l =	0	正常終了
#		-1	グラフィック使用不可
#		-2	指定パレットコードは現在のモードでは使用不可
#
#	グラフィック画面に楕円を描画する.
#	円弧開始/終了角度は 0～360 で、負数を指定すると扇形(角度は値の絶対値)
#	を描画する.
#	比率(以下 P)は 0～$ff00 で、描画する楕円の形は以下の通り.
#
#	  0 ≦ P ＜   256	横長楕円 Rx = R ; Ry = R*P/256
#	256 ＜ P ≦ $ff00	縦長楕円 Ry = R ; Rx = R*P/$ff00(P は 256 単位で切捨て)
#	       P ＝   256	    真円 Rx = Ry = R
#==============================================================================

def circle(x, y, r, pal, start, end, p):
   x68k.iocs(x68k.i.CIRCLE,a1=pack('7h',x,y,r,pal,start,end,p))

# IOCS PAINT
#$bc	_PAINT		グラフィック画面のペイント
#
#引数	a1.l	パラメータバッファのアドレス
#		 (0,a1)	X 座標
#		 (2,a1)	Y 〃
#		 (4,a1)	パレットコード
#		 (6,a1)	作業領域開始アドレス
#		(10,a1)	〃	終了〃
#
#返値	d0.l =	0	正常終了
#		-1	グラフィック使用不可
#		-2	指定パレットコードは現在のモードでは使用不可
#
#	グラフィック画面を塗り潰す.
#	作業領域は偶数番地から始まる必要があり、不足した場合はペイント途中で戻る.
#==============================================================================

def paint(x, y, pal,start,end):
   x68k.iocs(x68k.i.PAINT,a1=pack('5h',x,y,pal,start,end))

# sample main
def main():

  # 画面初期化
  x68k.crtmod(12, True)
  # カーソルオフ
  x68k.curoff()
  
  g0 = x68k.GVRam(0)
  g0.window(0, 0, 511, 511)
  g0.fill(0, 0, 511, 511, 0)
  x68k.vpage(1)
  
  line(0,0,511,511,0x1234,0xffff)
  box(100,100,200,200,0x54de,0xffee)
  circle(300,300,40,0xfefe,10,200,1000)
  box(200,200,400,400,0xffee,0xffff)
  #paint(230,300,0xffee,???,???)



  # カーソルオン
  x68k.curon()

if __name__ == "__main__":
  main()
